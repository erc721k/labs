/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ExampleRender, ExampleRenderInterface } from "../ExampleRender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_svgRegistry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "input",
        type: "bytes",
      },
    ],
    name: "render",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e6f380380610e6f83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610d83806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063316df61e14610051578063715018a61461007a5780638da5cb5b14610084578063f2fde38b1461009f575b600080fd5b61006461005f3660046108a3565b6100b2565b604051610071919061097f565b60405180910390f35b6100826100cb565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad366004610992565b6100df565b60606100c56100c08361015d565b6103c8565b92915050565b6100d36103f9565b6100dd6000610453565b565b6100e76103f9565b6001600160a01b0381166101515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61015a81610453565b50565b606061018d6040518060400160405280600d81526020016c48454c4c4f20574f524c44203160981b8152506104a3565b600080600080858060200190518101906101a791906109d1565b93509350935093506101dd6040518060400160405280600d81526020016c2422a62627902ba7a92622101960991b8152506104a3565b6101e56104e6565b6102b9610226604051806040016040528060018152602001600f60fb1b8152506040518060400160405280600381526020016233302560e81b8152506105a9565b610264604051806040016040528060018152602001607960f81b8152506040518060400160405280600381526020016235302560e81b8152506105a9565b604051602001610275929190610a25565b60408051601f1981840301815282825260ff89166020840152916102b491662327aaa72222a960c91b91016040516020818303038152906040526105d5565b610654565b6102fa610226604051806040016040528060018152602001600f60fb1b8152506040518060400160405280600381526020016234352560e81b8152506105a9565b61033b610226604051806040016040528060018152602001600f60fb1b8152506040518060400160405280600381526020016235352560e81b8152506105a9565b61037c610226604051806040016040528060018152602001600f60fb1b8152506040518060400160405280600381526020016237352560e81b8152506105a9565b6040805180820190915260068152651e17b9bb339f60d11b60208201526040516020016103ae96959493929190610a54565b604051602081830303815290604052945050505050919050565b60606103d38261067d565b6040516020016103e39190610ad3565b6040516020818303038152906040529050919050565b6000546001600160a01b031633146100dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610148565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61015a816040516024016104b7919061097f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526107e2565b6060604051602001610595907f3c7376672077696474683d2233323022206865696768743d223332302220737481527503cb6329e913130b1b5b3b937bab7321d11a3232311160551b60208201527503b34b2bba137bc1e91181018101999181019991811160551b60368201527f786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376604c8201526203391160ed1b606c820152601f60f91b606f82015260700190565b604051602081830303815290604052905090565b606082826040516020016105be929190610b18565b604051602081830303815290604052905092915050565b600154604051633a68f5db60e01b81526060916001600160a01b031690633a68f5db906106089086908690600401610b6d565b600060405180830381865afa158015610625573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261064d9190810190610b8e565b9392505050565b606061064d604051806040016040528060048152602001631d195e1d60e21b8152508484610803565b6060815160000361069c57505060408051602081019091526000815290565b6000604051806060016040528060408152602001610d0e60409139905060006003845160026106cb9190610c1b565b6106d59190610c33565b6106e0906004610c55565b905060006106ef826020610c1b565b67ffffffffffffffff81111561070757610707610834565b6040519080825280601f01601f191660200182016040528015610731576020820181803683370190505b509050818152600183018586518101602084015b8183101561079d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610745565b6003895106600181146107b757600281146107c8576107d4565b613d3d60f01b6001198301526107d4565b603d60f81b6000198301525b509398975050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60608383838660405160200161081c9493929190610c74565b60405160208183030381529060405290509392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561087357610873610834565b604052919050565b600067ffffffffffffffff82111561089557610895610834565b50601f01601f191660200190565b6000602082840312156108b557600080fd5b813567ffffffffffffffff8111156108cc57600080fd5b8201601f810184136108dd57600080fd5b80356108f06108eb8261087b565b61084a565b81815285602083850101111561090557600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561093e578181015183820152602001610926565b8381111561094d576000848401525b50505050565b6000815180845261096b816020860160208601610923565b601f01601f19169290920160200192915050565b60208152600061064d6020830184610953565b6000602082840312156109a457600080fd5b81356001600160a01b038116811461064d57600080fd5b805160ff811681146109cc57600080fd5b919050565b600080600080608085870312156109e757600080fd5b6109f0856109bb565b93506109fe602086016109bb565b9250610a0c604086016109bb565b9150610a1a606086016109bb565b905092959194509250565b60008351610a37818460208801610923565b835190830190610a4b818360208801610923565b01949350505050565b600087516020610a678285838d01610923565b885191840191610a7a8184848d01610923565b8851920191610a8c8184848c01610923565b8751920191610a9e8184848b01610923565b8651920191610ab08184848a01610923565b8551920191610ac28184848901610923565b919091019998505050505050505050565b7f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815260008251610b0b81601a850160208701610923565b91909101601a0192915050565b60008351610b2a818460208801610923565b603d60f81b908301908152601160f91b60018201528351610b52816002840160208801610923565b61011160f51b60029290910191820152600401949350505050565b828152604060208201526000610b866040830184610953565b949350505050565b600060208284031215610ba057600080fd5b815167ffffffffffffffff811115610bb757600080fd5b8201601f81018413610bc857600080fd5b8051610bd66108eb8261087b565b818152856020838501011115610beb57600080fd5b610bfc826020830160208601610923565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c2e57610c2e610c05565b500190565b600082610c5057634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610c6f57610c6f610c05565b500290565b600f60fa1b815260008551610c90816001850160208a01610923565b600160fd1b6001918401918201528551610cb1816002840160208a01610923565b808201915050601f60f91b8060028301528551610cd5816003850160208a01610923565b613c2f60f01b600393909101928301528451610cf8816005850160208901610923565b6005920191820152600601969550505050505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122051655d107078f38495c8c05ce84376f2461bc42dd139ae919edc6d7b3e78657464736f6c634300080f0033";

type ExampleRenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleRenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleRender__factory extends ContractFactory {
  constructor(...args: ExampleRenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExampleRender";
  }

  deploy(
    _svgRegistry_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleRender> {
    return super.deploy(
      _svgRegistry_,
      overrides || {}
    ) as Promise<ExampleRender>;
  }
  getDeployTransaction(
    _svgRegistry_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_svgRegistry_, overrides || {});
  }
  attach(address: string): ExampleRender {
    return super.attach(address) as ExampleRender;
  }
  connect(signer: Signer): ExampleRender__factory {
    return super.connect(signer) as ExampleRender__factory;
  }
  static readonly contractName: "ExampleRender";
  public readonly contractName: "ExampleRender";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleRenderInterface {
    return new utils.Interface(_abi) as ExampleRenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleRender {
    return new Contract(address, _abi, signerOrProvider) as ExampleRender;
  }
}
